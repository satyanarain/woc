{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getActiveStateExceptDrawer = getActiveStateExceptDrawer;\n  exports.isActiveRoute = isActiveRoute;\n  exports.getRouteNameByKey = getRouteNameByKey;\n  exports.getActiveState = getActiveState;\n  exports.getParent = getParent;\n  exports.inject = inject;\n  exports.popPrevious = popPrevious;\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/objectSpread\"));\n\n  function getActiveStateExceptDrawer(param) {\n    var state = param;\n\n    if (!state.routes) {\n      return state;\n    }\n\n    if (state.routes[state.index].routeName === 'DrawerOpen') {\n      return getActiveState(state.routes[0]);\n    }\n\n    return getActiveState(state.routes[state.index]);\n  }\n\n  function isActiveRoute(state, routeName) {\n    if (state.routeName === routeName) {\n      return true;\n    }\n\n    if (!state.routes) {\n      return state.routeName === routeName;\n    }\n\n    if (state.routes[state.index].routeName === 'DrawerOpen') {\n      return isActiveRoute(state.routes[0], routeName);\n    }\n\n    return isActiveRoute(state.routes[state.index], routeName);\n  }\n\n  function getRouteNameByKey(state, key) {\n    if (state.key === key) {\n      return state.routeName;\n    }\n\n    if (!state.routes) {\n      return state.routeName;\n    }\n\n    if (state.routes[state.index].key === key) {\n      return state.routes[state.index].routeName;\n    }\n\n    return getRouteNameByKey(state.routes[state.index], key);\n  }\n\n  function getActiveState(param, parent) {\n    var state = param;\n\n    if (!state.routes) {\n      return (0, _objectSpread2.default)({}, state, {\n        parent: parent\n      });\n    }\n\n    return getActiveState(state.routes[state.index], (0, _objectSpread2.default)({}, state, {\n      parent: parent\n    }));\n  }\n\n  function getParent(state, routeName, parent) {\n    if (state.routeName === routeName) {\n      return parent;\n    }\n\n    if (!state.routes) {\n      return null;\n    }\n\n    for (var i = 0; i < state.routes.length; i += 1) {\n      var res = getParent(state.routes[i], routeName, state);\n\n      if (res) {\n        return res;\n      }\n    }\n\n    return null;\n  }\n\n  function inject(state, key, index, routes) {\n    if (!state.routes) {\n      return state;\n    }\n\n    if (state.key === key) {\n      if (routes) {\n        return (0, _objectSpread2.default)({}, state, {\n          routes: routes,\n          index: index\n        });\n      }\n\n      return (0, _objectSpread2.default)({}, state, {\n        index: index\n      });\n    }\n\n    return (0, _objectSpread2.default)({}, state, {\n      routes: state.routes.map(function (x) {\n        return inject(x, key, index, routes);\n      })\n    });\n  }\n\n  function popPrevious(state, routeName) {\n    var parent = getParent(state, routeName);\n    var key = parent.key,\n        index = parent.index;\n\n    if (index) {\n      var routes = [].concat((0, _toConsumableArray2.default)(parent.routes.slice(0, index - 1)), (0, _toConsumableArray2.default)(parent.routes.slice(index)));\n      var newState = inject(state, key, index - 1, routes);\n      return newState;\n    }\n\n    return state;\n  }\n});","map":[[19,0,1,7],[19,11,1,16,"getActiveStateExceptDrawer"],[19,37,1,7],[19,38,1,43,"param"],[19,43,1,7],[19,45,1,50],[20,0,2,2],[20,8,2,8,"state"],[20,13,2,13],[20,16,2,16,"param"],[20,21,2,2],[22,0,3,2],[22,8,3,6],[22,9,3,7,"state"],[22,14,3,12],[22,15,3,13,"routes"],[22,21,3,2],[22,23,3,21],[23,0,4,4],[23,13,4,11,"state"],[23,18,4,4],[24,0,5,3],[26,0,6,2],[26,8,6,6,"state"],[26,13,6,11],[26,14,6,12,"routes"],[26,20,6,6],[26,21,6,19,"state"],[26,26,6,24],[26,27,6,25,"index"],[26,32,6,6],[26,34,6,32,"routeName"],[26,43,6,6],[26,48,6,46],[26,60,6,2],[26,62,6,60],[27,0,7,4],[27,13,7,11,"getActiveState"],[27,27,7,25],[27,28,7,26,"state"],[27,33,7,31],[27,34,7,32,"routes"],[27,40,7,26],[27,41,7,39],[27,42,7,26],[27,43,7,25],[27,44,7,4],[28,0,8,3],[30,0,9,2],[30,11,9,9,"getActiveState"],[30,25,9,23],[30,26,9,24,"state"],[30,31,9,29],[30,32,9,30,"routes"],[30,38,9,24],[30,39,9,37,"state"],[30,44,9,42],[30,45,9,43,"index"],[30,50,9,24],[30,51,9,23],[30,52,9,2],[31,0,10,1],[33,0,12,7],[33,11,12,16,"isActiveRoute"],[33,24,12,7],[33,25,12,30,"state"],[33,30,12,7],[33,32,12,37,"routeName"],[33,41,12,7],[33,43,12,48],[34,0,13,2],[34,8,13,6,"state"],[34,13,13,11],[34,14,13,12,"routeName"],[34,23,13,6],[34,28,13,26,"routeName"],[34,37,13,2],[34,39,13,37],[35,0,14,4],[35,13,14,11],[35,17,14,4],[36,0,15,3],[38,0,16,2],[38,8,16,6],[38,9,16,7,"state"],[38,14,16,12],[38,15,16,13,"routes"],[38,21,16,2],[38,23,16,21],[39,0,17,4],[39,13,17,11,"state"],[39,18,17,16],[39,19,17,17,"routeName"],[39,28,17,11],[39,33,17,31,"routeName"],[39,42,17,4],[40,0,18,3],[42,0,19,2],[42,8,19,6,"state"],[42,13,19,11],[42,14,19,12,"routes"],[42,20,19,6],[42,21,19,19,"state"],[42,26,19,24],[42,27,19,25,"index"],[42,32,19,6],[42,34,19,32,"routeName"],[42,43,19,6],[42,48,19,46],[42,60,19,2],[42,62,19,60],[43,0,20,4],[43,13,20,11,"isActiveRoute"],[43,26,20,24],[43,27,20,25,"state"],[43,32,20,30],[43,33,20,31,"routes"],[43,39,20,25],[43,40,20,38],[43,41,20,25],[43,42,20,24],[43,44,20,42,"routeName"],[43,53,20,24],[43,54,20,4],[44,0,21,3],[46,0,22,2],[46,11,22,9,"isActiveRoute"],[46,24,22,22],[46,25,22,23,"state"],[46,30,22,28],[46,31,22,29,"routes"],[46,37,22,23],[46,38,22,36,"state"],[46,43,22,41],[46,44,22,42,"index"],[46,49,22,23],[46,50,22,22],[46,52,22,50,"routeName"],[46,61,22,22],[46,62,22,2],[47,0,23,1],[49,0,25,7],[49,11,25,16,"getRouteNameByKey"],[49,28,25,7],[49,29,25,34,"state"],[49,34,25,7],[49,36,25,41,"key"],[49,39,25,7],[49,41,25,46],[50,0,26,2],[50,8,26,6,"state"],[50,13,26,11],[50,14,26,12,"key"],[50,17,26,6],[50,22,26,20,"key"],[50,25,26,2],[50,27,26,25],[51,0,27,4],[51,13,27,11,"state"],[51,18,27,16],[51,19,27,17,"routeName"],[51,28,27,4],[52,0,28,3],[54,0,29,2],[54,8,29,6],[54,9,29,7,"state"],[54,14,29,12],[54,15,29,13,"routes"],[54,21,29,2],[54,23,29,21],[55,0,30,4],[55,13,30,11,"state"],[55,18,30,16],[55,19,30,17,"routeName"],[55,28,30,4],[56,0,31,3],[58,0,32,2],[58,8,32,6,"state"],[58,13,32,11],[58,14,32,12,"routes"],[58,20,32,6],[58,21,32,19,"state"],[58,26,32,24],[58,27,32,25,"index"],[58,32,32,6],[58,34,32,32,"key"],[58,37,32,6],[58,42,32,40,"key"],[58,45,32,2],[58,47,32,45],[59,0,33,4],[59,13,33,11,"state"],[59,18,33,16],[59,19,33,17,"routes"],[59,25,33,11],[59,26,33,24,"state"],[59,31,33,29],[59,32,33,30,"index"],[59,37,33,11],[59,39,33,37,"routeName"],[59,48,33,4],[60,0,34,3],[62,0,35,2],[62,11,35,9,"getRouteNameByKey"],[62,28,35,26],[62,29,35,27,"state"],[62,34,35,32],[62,35,35,33,"routes"],[62,41,35,27],[62,42,35,40,"state"],[62,47,35,45],[62,48,35,46,"index"],[62,53,35,27],[62,54,35,26],[62,56,35,54,"key"],[62,59,35,26],[62,60,35,2],[63,0,36,1],[65,0,38,7],[65,11,38,16,"getActiveState"],[65,25,38,7],[65,26,38,31,"param"],[65,31,38,7],[65,33,38,38,"parent"],[65,39,38,7],[65,41,38,46],[66,0,39,2],[66,8,39,8,"state"],[66,13,39,13],[66,16,39,16,"param"],[66,21,39,2],[68,0,40,2],[68,8,40,6],[68,9,40,7,"state"],[68,14,40,12],[68,15,40,13,"routes"],[68,21,40,2],[68,23,40,21],[69,0,41,4],[69,45,41,16,"state"],[69,50,41,4],[70,0,41,23,"parent"],[70,8,41,23,"parent"],[70,14,41,29],[70,16,41,23,"parent"],[71,0,41,4],[72,0,42,3],[74,0,43,2],[74,11,43,9,"getActiveState"],[74,25,43,23],[74,26,43,24,"state"],[74,31,43,29],[74,32,43,30,"routes"],[74,38,43,24],[74,39,43,37,"state"],[74,44,43,42],[74,45,43,43,"index"],[74,50,43,24],[74,51,43,23],[74,85,43,56,"state"],[74,90,43,23],[75,0,43,63,"parent"],[75,6,43,63,"parent"],[75,12,43,69],[75,14,43,63,"parent"],[76,0,43,23],[76,7,43,2],[77,0,44,1],[79,0,46,7],[79,11,46,16,"getParent"],[79,20,46,7],[79,21,46,26,"state"],[79,26,46,7],[79,28,46,33,"routeName"],[79,37,46,7],[79,39,46,44,"parent"],[79,45,46,7],[79,47,46,52],[80,0,47,2],[80,8,47,6,"state"],[80,13,47,11],[80,14,47,12,"routeName"],[80,23,47,6],[80,28,47,26,"routeName"],[80,37,47,2],[80,39,47,37],[81,0,48,4],[81,13,48,11,"parent"],[81,19,48,4],[82,0,49,3],[84,0,50,2],[84,8,50,6],[84,9,50,7,"state"],[84,14,50,12],[84,15,50,13,"routes"],[84,21,50,2],[84,23,50,21],[85,0,51,4],[85,13,51,11],[85,17,51,4],[86,0,52,3],[88,0,53,2],[88,9,53,7],[88,13,53,11,"i"],[88,14,53,12],[88,17,53,15],[88,18,53,2],[88,20,53,18,"i"],[88,21,53,19],[88,24,53,22,"state"],[88,29,53,27],[88,30,53,28,"routes"],[88,36,53,22],[88,37,53,35,"length"],[88,43,53,2],[88,45,53,43,"i"],[88,46,53,44],[88,50,53,48],[88,51,53,2],[88,53,53,51],[89,0,54,4],[89,10,54,10,"res"],[89,13,54,13],[89,16,54,16,"getParent"],[89,25,54,25],[89,26,54,26,"state"],[89,31,54,31],[89,32,54,32,"routes"],[89,38,54,26],[89,39,54,39,"i"],[89,40,54,26],[89,41,54,25],[89,43,54,43,"routeName"],[89,52,54,25],[89,54,54,54,"state"],[89,59,54,25],[89,60,54,4],[91,0,55,4],[91,10,55,8,"res"],[91,13,55,4],[91,15,55,13],[92,0,56,6],[92,15,56,13,"res"],[92,18,56,6],[93,0,57,5],[94,0,58,3],[96,0,59,2],[96,11,59,9],[96,15,59,2],[97,0,60,1],[99,0,62,7],[99,11,62,16,"inject"],[99,17,62,7],[99,18,62,23,"state"],[99,23,62,7],[99,25,62,30,"key"],[99,28,62,7],[99,30,62,35,"index"],[99,35,62,7],[99,37,62,42,"routes"],[99,43,62,7],[99,45,62,50],[100,0,63,2],[100,8,63,6],[100,9,63,7,"state"],[100,14,63,12],[100,15,63,13,"routes"],[100,21,63,2],[100,23,63,21],[101,0,64,4],[101,13,64,11,"state"],[101,18,64,4],[102,0,65,3],[104,0,66,2],[104,8,66,6,"state"],[104,13,66,11],[104,14,66,12,"key"],[104,17,66,6],[104,22,66,20,"key"],[104,25,66,2],[104,27,66,25],[105,0,67,4],[105,10,67,8,"routes"],[105,16,67,4],[105,18,67,16],[106,0,68,6],[106,47,68,18,"state"],[106,52,68,6],[107,0,68,25,"routes"],[107,10,68,25,"routes"],[107,16,68,31],[107,18,68,25,"routes"],[107,24,68,6],[108,0,68,33,"index"],[108,10,68,33,"index"],[108,15,68,38],[108,17,68,33,"index"],[109,0,68,6],[110,0,69,5],[112,0,70,4],[112,45,70,16,"state"],[112,50,70,4],[113,0,70,23,"index"],[113,8,70,23,"index"],[113,13,70,28],[113,15,70,23,"index"],[114,0,70,4],[115,0,71,3],[117,0,72,2],[117,43,72,14,"state"],[117,48,72,2],[118,0,72,21,"routes"],[118,6,72,21,"routes"],[118,12,72,27],[118,14,72,29,"state"],[118,19,72,34],[118,20,72,35,"routes"],[118,26,72,29],[118,27,72,42,"map"],[118,30,72,29],[118,31,72,46],[118,41,72,46,"x"],[118,42,72,47],[119,0,72,47],[119,15,72,51,"inject"],[119,21,72,57],[119,22,72,58,"x"],[119,23,72,57],[119,25,72,61,"key"],[119,28,72,57],[119,30,72,66,"index"],[119,35,72,57],[119,37,72,73,"routes"],[119,43,72,57],[119,44,72,47],[120,0,72,47],[120,7,72,29],[121,0,72,2],[122,0,73,1],[124,0,75,7],[124,11,75,16,"popPrevious"],[124,22,75,7],[124,23,75,28,"state"],[124,28,75,7],[124,30,75,35,"routeName"],[124,39,75,7],[124,41,75,46],[125,0,76,2],[125,8,76,8,"parent"],[125,14,76,14],[125,17,76,17,"getParent"],[125,26,76,26],[125,27,76,27,"state"],[125,32,76,26],[125,34,76,34,"routeName"],[125,43,76,26],[125,44,76,2],[126,0,75,46],[126,8,78,10,"key"],[126,11,75,46],[126,14,78,25,"parent"],[126,20,75,46],[126,21,78,10,"key"],[126,24,75,46],[127,0,75,46],[127,8,78,15,"index"],[127,13,75,46],[127,16,78,25,"parent"],[127,22,75,46],[127,23,78,15,"index"],[127,28,75,46],[129,0,79,2],[129,8,79,6,"index"],[129,13,79,2],[129,15,79,13],[130,0,80,4],[130,10,80,10,"routes"],[130,16,80,16],[130,62,80,23,"parent"],[130,68,80,29],[130,69,80,30,"routes"],[130,75,80,23],[130,76,80,37,"slice"],[130,81,80,23],[130,82,80,43],[130,83,80,23],[130,85,80,46,"index"],[130,90,80,51],[130,93,80,54],[130,94,80,23],[130,95,80,16],[130,131,80,61,"parent"],[130,137,80,67],[130,138,80,68,"routes"],[130,144,80,61],[130,145,80,75,"slice"],[130,150,80,61],[130,151,80,81,"index"],[130,156,80,61],[130,157,80,16],[130,159,80,4],[131,0,81,4],[131,10,81,10,"newState"],[131,18,81,18],[131,21,81,21,"inject"],[131,27,81,27],[131,28,81,28,"state"],[131,33,81,27],[131,35,81,35,"key"],[131,38,81,27],[131,40,81,40,"index"],[131,45,81,45],[131,48,81,48],[131,49,81,27],[131,51,81,51,"routes"],[131,57,81,27],[131,58,81,4],[132,0,82,4],[132,13,82,11,"newState"],[132,21,82,4],[133,0,83,3],[135,0,84,2],[135,11,84,9,"state"],[135,16,84,2],[136,0,85,1]]},"type":"js/module"}]}